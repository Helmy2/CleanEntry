package com.example.clean.entry.feature_auth.presentation.country_code_picker

import com.example.clean.core.mvi.BaseViewModel
import com.example.clean.entry.feature_auth.domain.model.Country
import kotlinx.coroutines.FlowPreview

@OptIn(FlowPreview::class)
class CountryCodePickerViewModel(
    val selectedCountry: Country
) :
    BaseViewModel<CountryCodePickerReducer.State, CountryCodePickerReducer.Event, CountryCodePickerReducer.Effect>(
        reducer = CountryCodePickerReducer,
        initialState = CountryCodePickerReducer.State()
    ) {

    private val allCountries = listOf(
        Country("Egypt", "+20", "EG", "ðŸ‡ªðŸ‡¬"),
        Country("Saudi Arabia", "+966", "SA", "ðŸ‡¸ðŸ‡¦"),
        Country("United Kingdom", "+44", "GB", "ðŸ‡¬ðŸ‡§"),
        Country("Canada", "+1", "CA", "ðŸ‡¨ðŸ‡¦"),
        Country("France", "+33", "FR", "ðŸ‡«ðŸ‡·"),
        Country("Spain", "+34", "ES", "ðŸ‡ªðŸ‡¸"),
        Country("Italy", "+39", "IT", "ðŸ‡®ðŸ‡¹"),
        Country("United States", "+1", "US", "ðŸ‡ºðŸ‡¸")
    )


    override suspend fun initialDataLoad() {
        setState(CountryCodePickerReducer.Event.CountriesLoaded(allCountries))
        setState(CountryCodePickerReducer.Event.CountrySelected(selectedCountry))
    }


    override fun handleEvent(event: CountryCodePickerReducer.Event) {
        when (event) {
            else -> setState(event)
        }
    }
}
