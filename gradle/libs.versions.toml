[versions]
adaptive = "1.2.0-alpha06"
agp = "8.13.0"
android-compileSdk = "36"
android-minSdk = "28"
android-targetSdk = "36"
datastorePreferences = "1.1.7"
kotlin = "2.2.10"
libphonenumberAndroid = "9.0.12"
libphonenumberJvm = "9.0.14"
activityCompose = "1.11.0"
koin = "4.1.1"
napier = "2.7.1"
slf4jSimple = "2.0.17"
turbine = "1.2.1"
apollo = "4.3.3"
composeMultiplatform = "1.9.0"
androidxLifecycle = "2.9.4"
skie = "0.10.6"
composeHotReload = "1.0.0-beta08"
kotlinxCoroutines = "1.10.2"
sqldelight = "2.1.0"
ktor = "3.3.0"
coil3 = "3.3.0"
coreSplashscreen = "1.0.1"

[libraries]
adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "adaptive" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
libphonenumber-android = { module = "io.michaelrocks:libphonenumber-android", version.ref = "libphonenumberAndroid" }
libphonenumber-jvm = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libphonenumberJvm" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }

apollo-runtime = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "apollo" }

kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jSimple" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }

compose-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
compose-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3" }

androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }

[bundles]
coil = ["coil-compose", "coil-compose-core", "coil-network-ktor3"]
ktor = ["ktor-client-core", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]
composeLifecycle = ["compose-lifecycle-viewmodelCompose", "compose-lifecycle-runtimeCompose"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
apollo = { id = "com.apollographql.apollo", version.ref = "apollo" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }